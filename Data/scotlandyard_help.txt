Scotland Yard is a game based on the original Scotlan Yard board game. For an impression of the classical version, please check: https://en.wikipedia.org/wiki/Scotland_Yard_(board_game). This text will give you some insight in the messages that can be sent to a game of Scotland Yard and what kind of data you can expect to get back in return.

	In the following text the structure of the message that can be sent are described as follows:
		MSG: MESSAGE_ID, DATA_1: DataType(<DataName>) DATA_2: DataType(<DataName>), ...
		Where:
			MESSAGE_ID				is the enumeration value that should be sent.
			DATA_1, DATA_2, ...		are the types (DataType) and indications of the kind of data (DataName) that should be added to the bitstream, in that order.

	After the EMessage_RecvJoinGame message has been received the player has joined a game and the following messages can be sent:

	EMessage_SendGetMap
		DATA_1: ClientID(<YOUR CLIENT ID>)

	EMessage_SendGetSpyTravelLog
		DATA_1: ClientID(<YOUR CLIENT ID>)

	EMessage_SendGetPlayerLocations
		DATA_1: ClientID(<YOUR CLIENT ID>)

	EMessage_SendTravel
		DATA_1: ClientID(<YOUR CLIENT ID>)
		DATA_2: GameID(<YOUR GAME ID>)
		DATA_3: uint32_t(<DESTINATION>)

	EMessage_SendGetLocation
		DATA_1: ClientID(<YOUR CLIENT ID>)

	EMessage_SendGetTravelLog
		DATA_1: ClientID(<YOUR CLIENT ID>)

	EMessage_SendAmISpy
		DATA_1: ClientID(<YOUR CLIENT ID>)

	EMessage_SendGetRemainingTokens
		DATA_1: ClientID(<YOUR CLIENT ID>)


	The following message will occasionally be sent by the server:

	EMessage_RecvGetMap
		DATA_1: RakString(<MAPFILE>)
		
	EMessage_RecvTravelResult
		DATA_1: TBA
		
	EMessage_RecvGetSpyTravelLog
		DATA_1: TBA
		
	EMessage_RecvGetPlayerLocations
		DATA_1: TBA
		
	EMessage_RecvGetLocation
		DATA_1: uint32_t(<LOCATION>)
		
	EMessage_RecvAmISpy
		DATA_1: bool(<VALUE>)
		
	EMessage_RecvGetTravelLog
		DATA_1: TBA
		
	EMessage_RecvGetRemainingTokens	
		DATA_1: ETravelOption
		DATA_2: uint32_t(<VALUE FOR PREVIOUS TRAVEL OPTION DATA_1>)
		DATA_3: ETravelOption
		DATA_4: uint32_t(<VALUE FOR PREVIOUS TRAVEL OPTION DATA_3>)
		DATA_5: ETravelOption
		DATA_6: uint32_t(<VALUE FOR PREVIOUS TRAVEL OPTION DATA_5>)
